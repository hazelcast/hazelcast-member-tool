name: publish-release
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v4.2020.08.2

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
    outputs:
      release: ${{ steps.release-info.outputs.release }}
    name: CLI Release Automation
    steps:
      - uses: actions/checkout@v2.3.2

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Make
        run: cd distro && make

      - name: Set HZ_VERSION
        run: |
          echo "HZ_VERSION=$(grep '<hazelcast.version>' pom.xml | sed "s@.*<hazelcast.version>\(.*\)</hazelcast.version>.*@\1@")" >> $GITHUB_ENV

      - name: Set RELEASE & RELEASE_INFO
        id: release-info
        run: |
          echo "RELEASE=$(echo ${{ github.ref }} | cut -c 12-)" >> $GITHUB_ENV
          echo ::set-output name=release::$(echo ${{ github.ref }} | cut -c 12-)
          echo "RELEASE_INFO=$(distro/build/dist/hazelcast-${{ env.HZ_VERSION }}/bin/hz -V | awk '{print}' ORS=', ')" >> $GITHUB_ENV

      - name: Set ASSET_NAME
        run: |
          echo "ASSET_NAME=$(printf "hazelcast-%s.tar.gz" ${{ env.HZ_VERSION }})" >> $GITHUB_ENV

      - name: Set ASSET_PATH
        run: |
          echo "ASSET_PATH=$(printf "distro/build/dist/%s" ${{ env.ASSET_NAME }})" >> $GITHUB_ENV

      - name: Set ASSET_SHASUM
        run: |
          echo "ASSET_SHASUM=$(sha256sum ${{ env.ASSET_PATH }} | cut -d ' ' -f 1)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.RELEASE }}
          body: |
            Hazelcast Command Line ${{ env.RELEASE }} release
            # Version Info
            ${{ env.RELEASE_INFO }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/zip

      - name: Create & Upload deb package
        run: |
          mkdir -p packages/deb/hazelcast/usr/lib/hazelcast
          mkdir -p packages/deb/hazelcast/usr/bin
          tar -xvf ${{ env.ASSET_PATH }} -C packages/deb/hazelcast/usr/lib/hazelcast/
          ln -s /usr/lib/hazelcast/hazelcast-${{ env.HZ_VERSION }}/bin/hz packages/deb/hazelcast/usr/bin/hz
          sed -i 's+Version:.*$+Version: ${{ env.RELEASE }}+g' packages/deb/hazelcast/DEBIAN/control
          sed -i 's+/usr/lib/hazelcast/hazelcast-.*/config/\(.*$\)+/usr/lib/hazelcast/hazelcast-${{ env.HZ_VERSION }}/config/\1+g' packages/deb/hazelcast/DEBIAN/conffiles
          sed -i 's+/usr/lib/hazelcast/hazelcast-[^/]*/\(.*$\)+/usr/lib/hazelcast/hazelcast-${{ env.HZ_VERSION }}/\1+g' packages/deb/hazelcast/DEBIAN/postinst
          dpkg-deb --build packages/deb/hazelcast
          mv packages/deb/hazelcast.deb hazelcast-${{ env.RELEASE }}-all.deb
          DEB_SHA256SUM=$(sha256sum hazelcast-${{ env.RELEASE }}-all.deb | cut -d ' ' -f 1)
          DEB_SHA1SUM=$(sha1sum hazelcast-${{ env.RELEASE }}-all.deb | cut -d ' ' -f 1)
          DEB_MD5SUM=$(md5sum hazelcast-${{ env.RELEASE }}-all.deb | cut -d ' ' -f 1)
          curl -H "Authorization: Bearer ${{ secrets.ARTIFACTORY_SECRET }}" -H "X-Checksum-Deploy: false" -H "X-Checksum-Sha256: $DEB_SHA256SUM" \
            -H "X-Checksum-Sha1: $DEB_SHA1SUM" -H "X-Checksum-MD5: $DEB_MD5SUM" -T"hazelcast-${{ env.RELEASE }}-all.deb" \
            -X PUT "https://repository.hazelcast.com/debian-test-local/hazelcast-${{ env.RELEASE }}-all.deb;deb.distribution=stable;deb.component=main;deb.architecture=all"

